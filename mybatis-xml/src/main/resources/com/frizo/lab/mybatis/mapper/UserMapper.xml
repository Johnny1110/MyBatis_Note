<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
					"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--與 interface 做關聯-->
<mapper namespace="com.frizo.lab.mybatis.mapper.UserMapper">

	<!-- Entity 與 DB_Table 欄位對應設定 -->
	<resultMap id="userMap" type="com.frizo.lab.mybatis.model.SysUser">
		<id property="id" column="id"/> <!--必填欄位-->
		<result property="userName" column="user_name"/>
		<result property="userPassword" column="user_password"/>
		<result property="userEmail" column="user_email"/>
		<result property="userInfo" column="user_info"/>
		<result property="headImg" column="head_img" jdbcType="BLOB"/>
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
	</resultMap>

	<sql id="BaseColunm">
		id, user_name, user_password, user_email, user_info, head_img, create_time
	</sql>

	<!-- <select> 映射查詢語句 -->
	<!-- resultMap 設定返回值的類型與映射關係 -->
	<!-- #{id} 是傳入參數名稱 -->
	<select id="selectById" resultMap="userMap">
		select * from sys_user where id = #{id}
	</select>

	<!-- resultType 指定返回類型 -->
	<select id="selectAll" resultType="com.frizo.lab.mybatis.model.SysUser">
		select id,
			user_name,
			user_password,
			user_email,
			user_info,
			head_img,
			create_time
		from sys_user
	</select>

	<select id="selectRolesByUserId" resultType="com.frizo.lab.mybatis.model.SysRole">
		select
			r.id,
			r.role_name,
			r.enabled,
			r.create_by,
			r.create_time,
			u.user_name as "user.userName",
			u.user_email as "user.userEmail"
		from sys_user u
		inner join sys_user_role ur on u.id = ur.user_id
		inner join sys_role r on ur.role_id = r.id
		where u.id = #{userId}
	</select>

	<insert id="insert">
		insert into sys_user(
			id, user_name, user_password, user_email, user_info, head_img, create_time
		)
		values(#{id}, #{userName}, #{userPassword}, #{userEmail},
				#{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
	</insert>

	<!-- 使用 JDBC useGeneratedKeys 取出資料庫生成的 key，獲得的 key 賦值給 keyProperty 配置的 "id"-->
	<!-- 當需要配置複合 PK 時，可以使用 ',' 隔開。通常還需要配置 keyColumn 屬性。-->
 	<insert id="insertReturnKey" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user(
					user_name, user_password, user_email, user_info, head_img, create_time

		)
		values(#{userName}, #{userPassword}, #{userEmail},
			#{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertWithSelectKey">
		insert into sys_user(
					user_name, user_password, user_email, user_info, head_img, create_time

		)
		values(#{userName}, #{userPassword}, #{userEmail},
			#{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
		<selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="update">
		update sys_user
		set user_name = #{userName},
			user_password = #{userPassword},
			user_email = #{userEmail},
			user_info = #{userInfo},
			head_img = #{headImg, jdbcType=BLOB},
			create_time = #{createTime, jdbcType=TIMESTAMP}
		where id = #{id}
	</update>

	<delete id="delete">
		delete from sys_user where id = #{id}
	</delete>

	<select id="selectRolesByUserIdAndRoleEnabled" resultType="com.frizo.lab.mybatis.model.SysRole">
		select
		sr.id,
		sr.role_name,
		sr.enabled,
		sr.create_by,
		sr.create_time
		from sys_role as sr
		inner join sys_user_role as sur on sur.role_id = sr.id
		where sur.user_id = #{userId} and sr.enabled = #{enabled}
	</select>

</mapper>