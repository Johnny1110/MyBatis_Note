<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frizo.lab.mybatis.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.frizo.lab.mybatis.model.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo"/>
        <result column="head_img" jdbcType="LONGVARBINARY" property="headImg"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.frizo.lab.mybatis.model.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user (id, user_name, user_password,
        user_email, create_time, user_info,
        head_img)
        values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
        #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR},
        #{headImg,jdbcType=LONGVARBINARY})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.frizo.lab.mybatis.model.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_email = #{userEmail,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        user_info = #{userInfo,jdbcType=LONGVARCHAR},
        head_img = #{headImg,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, user_name, user_password, user_email, create_time, user_info, head_img
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, user_name, user_password, user_email, create_time, user_info, head_img
        from sys_user
    </select>

    <select id="selectUserAndRoleById" resultType="com.frizo.lab.mybatis.model.SysUser">
        select su.id,
               su.user_name     userName,
               su.user_password userPassword,
               su.user_email    userEmail,
               su.user_info     userInfo,
               su.head_img      headImg,
               su.create_time   createTime,
               sr.id            "role.id",
               sr.role_name     "role.roleName",
               sr.enabled       "role.enabled",
               sr.create_by     "role.createBy",
               sr.create_time   "role.createTime"
        from sys_user as su
                 inner join sys_user_role sur on su.id = sur.user_id
                 inner join sys_role sr on sur.role_id = sr.id
        where su.id = #{userId}
    </select>

    <resultMap id="userRoleMap" type="com.frizo.lab.mybatis.model.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo"/>
        <result column="head_img" jdbcType="LONGVARBINARY" property="headImg"/>
        <!-- role 相關 -->
        <result column="role_id" jdbcType="BIGINT" property="role.id"/>
        <result column="role_name" jdbcType="VARCHAR" property="role.roleName"/>
        <result column="enabled" jdbcType="INTEGER" property="role.enabled"/>
        <result column="create_by" jdbcType="BIGINT" property="role.createBy"/>
        <result column="role_create_time" jdbcType="TIMESTAMP" property="role.createTime"/>
    </resultMap>

    <resultMap id="userRoleMap2" extends="BaseResultMap" type="com.frizo.lab.mybatis.model.SysUser">
        <result column="role_id" jdbcType="BIGINT" property="role.id"/>
        <result column="role_name" jdbcType="VARCHAR" property="role.roleName"/>
        <result column="enabled" jdbcType="INTEGER" property="role.enabled"/>
        <result column="create_by" jdbcType="BIGINT" property="role.createBy"/>
        <result column="role_create_time" jdbcType="TIMESTAMP" property="role.createTime"/>
    </resultMap>

    <resultMap id="userRoleMap3" extends="BaseResultMap" type="com.frizo.lab.mybatis.model.SysUser">
        <association property="role" columnPrefix="role_" javaType="com.frizo.lab.mybatis.model.SysRole">
            <result column="id" jdbcType="BIGINT" property="id"/>
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
            <result column="enabled" jdbcType="INTEGER" property="enabled"/>
            <result column="create_by" jdbcType="BIGINT" property="createBy"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        </association>
    </resultMap>

    <resultMap id="roleMap" type="com.frizo.lab.mybatis.model.SysRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="enabled" jdbcType="INTEGER" property="enabled"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <resultMap id="userRoleMap4" extends="BaseResultMap" type="com.frizo.lab.mybatis.model.SysUser">
        <association property="role" columnPrefix="role_" resultMap="roleMap"/>
    </resultMap>

    <resultMap id="userRoleMap5" extends="BaseResultMap" type="com.frizo.lab.mybatis.model.SysUser">
        <association property="role" columnPrefix="role_"
                     resultMap="com.frizo.lab.mybatis.mapper.SysRoleMapper.BaseResultMap"/>
    </resultMap>

    <select id="selectUserAndRoleById2" resultMap="userRoleMap5">
        select su.id,
               su.user_name,
               su.user_password,
               su.user_email,
               su.user_info,
               su.head_img,
               su.create_time,
               sr.id          role_id,
               sr.role_name   role_role_name,
               sr.enabled     role_enabled,
               sr.create_by   role_create_by,
               sr.create_time role_create_time
        from sys_user as su
                 inner join sys_user_role sur on su.id = sur.user_id
                 inner join sys_role sr on sur.role_id = sr.id
        where su.id = #{userId}
    </select>

    <resultMap id="userRoleMapSelect" type="com.frizo.lab.mybatis.model.SysUser" extends="BaseResultMap">
        <association property="role" column="{id=role_id}"
                     fetchType="lazy"
                     select="com.frizo.lab.mybatis.mapper.SysRoleMapper.selectRoleById"/>
    </resultMap>

    <select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
        select u.id,
               u.user_name,
               u.user_password,
               u.user_email,
               u.user_info,
               u.head_img,
               u.create_time,
               ur.role_id
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
        where u.id = #{id}
    </select>

</mapper>